/*
 * NOTE FOR WINDOWS USERS:
 * Currently, the Gradle model for Platform does not allow us to differentiate between different
 * c-runtime, ABI or other binary variants. This means that it is not possible to differentiate
 * between a prebuilt library binary compatible with VS2010 vs VS2013.
 *
 * As such, this sample will only work on Windows after setting the 'WinCUnit' to match your toolchain
 * Valid values for WinCUnit: [cygwin, mingw, vs2010, vs2013, vs2015]
 */

apply plugin: 'c'
apply plugin: 'cunit-test-suite'

version = '0.0.0'

model {
	components {
		cds(NativeLibrarySpec)
	}

	buildTypes {
		debug
		release
	}

	repositories {
		libs(PrebuiltLibraries) {
			cunit {
				headers.srcDir "libs/cunit/2.1-2/include"
				binaries.withType(StaticLibraryBinary) {
					staticLibraryFile = file("libs/cunit/2.1-2/lib/" + findCUnitLibForPlatform(targetPlatform))
				}
			}
		}
	}

	binaries {
		withType(CUnitTestSuiteBinarySpec) {
			lib library: 'cunit', linkage: 'static'
		}

		all {
			cCompiler.args "-std=c11"
			if (toolChain in Gcc) {
				if (buildType == buildTypes.release) {
					cCompiler.args "-DNDEBUG"
				} else if (buildType == buildTypes.debug) {
					cCompiler.args "-Wall"
				}
			}
		}
	}

	testSuites {
		cdsTest(CUnitTestSuiteSpec) {
			testing $.components.cds
		}
	}
}

def findCUnitLibForPlatform(Platform platform) {
	if (platform.getOperatingSystem() == "windows") {
		assert project.hasProperty('WinCUnit')
		return "$WinCUnit/cunit.lib"
	} else if (platform.getOperatingSystem() == "osx") {
		return "osx/libcunit.a"
	} else {
		return "linux/libcunit.a"
	}
}
